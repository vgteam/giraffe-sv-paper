(kubectl delete job xhchang-graphaligner || true) && kubectl apply -f - <<'EOF'
apiVersion: batch/v1
kind: Job
metadata:
  name: xhchang-graphaligner
spec:
  ttlSecondsAfterFinished: 86400
  template:
    spec:
      containers:
      - name: xhchang-graphaligner
        imagePullPolicy: Always
        image: xhchang/vg:giraffe-paper
        command:
        - /bin/bash
        - -c
        - |
          set -ex
          cd /tmp
          
          printf "graph\tgbwt\treads\tpairing\tcorrect\tmapq60\twrong_mapq60\tidentity\tscore\n" > report.tsv
          printf "correct\tmq\tscore\taligner\n" > roc_stats.tsv
          
          #Get graphs
          aws s3 cp s3://vg-k8s/profiling/graphs/v3/for-NA19239/1000gplo/hs38d1/1000GPlo_hs38d1_filter.xg ./1000gp.xg
          vg convert -f -t 23 1000gp.xg 1000gp.gfa
          aws s3 cp 1000gp.gfa s3://vg-k8s/profiling/graphs/v3/for-NA19239/1000gplo/hs38d1/1000GPlo_hs38d1_filter.gfa
          
          THREAD_COUNT=20
          
          for SPECIES in human  ; do
              case "${SPECIES}" in
              yeast)
                  GRAPHS=(yeast_subset)
                  READSETS=(DBVPG6044 DBVPG6765 N44 UWOPS034614 UWOPS919171 Y12 YPS138)
                  ;;
              human)
                  GRAPHS=(hgsvc 1000gp)
                  READSETS=(novaseq6000 hiseqxten hiseq2500)
                  ;;
              esac
              for GRAPH in ${GRAPHS[@]} ; do
                  for READS in ${READSETS[@]} ; do
                      case ${GRAPH} in
                      1000gp)
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/for-NA19240/hgsvc/grch38/${READS}/out_sim_gbwt/sim.gam ./sim.gam
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/for-NA19240/hgsvc/grch38/${READS}/out_sim_gbwt/sim.fq.gz ./sim.fq.gz
                          gunzip sim.fq.gz
                          ;;
                      hgsvc)
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/for-NA19240/hgsvc/grch38/${READS}/out_sim_gbwt/sim.gam ./sim.gam
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/for-NA19240/hgsvc/grch38/${READS}/out_sim_gbwt/sim.fq.gz ./sim.fq.gz
                          gunzip sim.fq.gz
                          ;;
                      yeast_subset)
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/yeast/sim-${READS}.gam ./sim.gam
                          aws s3 cp s3://vg-k8s/profiling/reads/sim/yeast/sim-${READS}.fq ./sim.fq
                          ;;
                      esac
          
                      GraphAligner -g ${GRAPH}.gfa -f sim.fq.gz -a mapped.gam -x vg -t ${THREAD_COUNT} --seeds-mxm-cache-prefix ${GRAPH}_seeds
          
          
                      vg annotate -m -x ${GRAPH}.xg -a mapped.gam | vg gamcompare -s -r 100 - sim.gam 2> count | vg view -aj - > compared.json
          
                      CORRECT_COUNT="$(grep correctly_mapped compared.json | wc -l)"
                      IDENTITY="$(jq '.identity' compared.json | awk '{sum+=$1} END {print sum/NR}')"
                      SCORE="$(sed -n '2p' count | sed 's/[^0-9\.]//g')"
          
                      echo ${GRAPH} ${READS} ${SPEED} ${CORRECT_COUNT} ${SCORE}
                      printf "${GRAPH}\tgraphaligner\t${READS}\t-\t-\t${CORRECT_COUNT}\t-\t-\t${IDENTITY}\t${SCORE}\n" >> report.tsv
          
                      jq -r '(if .correctly_mapped then 1 else 0 end|tostring) + "," + (.mapping_quality|tostring) + "," + (.score|tostring)' compared.json | s    ed 's/,/\t/g' | sed "s/$/\tgraphaligner_${GRAPH}${READS}/" >> roc_stats.tsv
                  done
              done
          done
          aws s3 cp report.tsv s3://vg-k8s/users/xhchang/giraffe_experiments_2/liftover/report_graphaligner.tsv
          aws s3 cp roc_stats.tsv s3://vg-k8s/users/xhchang/giraffe_experiments_2/liftover/roc_stats_graphaligner_1kg.tsv
          
        volumeMounts:
        - mountPath: /tmp
          name: scratch-volume
        - mountPath: /root/.aws
          name: s3-credentials
        resources:
          requests:
            cpu: 24
            memory: "300Gi"
            ephemeral-storage: "300Gi"
          limits:
            cpu: 24
            memory: "300Gi"
            ephemeral-storage: "300Gi"
      restartPolicy: Never
      volumes:
      - name: scratch-volume
        emptyDir: {}
      - name: s3-credentials
        secret:
          secretName: shared-s3-credentials
  backoffLimit: 0
EOF
